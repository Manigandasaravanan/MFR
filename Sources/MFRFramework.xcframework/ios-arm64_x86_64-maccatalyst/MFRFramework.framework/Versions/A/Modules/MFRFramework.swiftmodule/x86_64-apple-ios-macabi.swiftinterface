// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios18.1-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name MFRFramework
import ARKit
@_exported import MFRFramework
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum ExpressionType {
  case smile
  case blink
  case zoomIn
  case zoomOut
  case leftTurn
  case rightTurn
  case upTurn
  case downTurn
  case none
  public static func == (a: MFRFramework.ExpressionType, b: MFRFramework.ExpressionType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum LivenessDetectionResult {
  case success
  case failed
  case spoofingDetected
  case timeOut
  case none
  public static func == (a: MFRFramework.LivenessDetectionResult, b: MFRFramework.LivenessDetectionResult) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension MFRFramework.ExpressionType : Swift.Equatable {}
extension MFRFramework.ExpressionType : Swift.Hashable {}
extension MFRFramework.LivenessDetectionResult : Swift.Equatable {}
extension MFRFramework.LivenessDetectionResult : Swift.Hashable {}
